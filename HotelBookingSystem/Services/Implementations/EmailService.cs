using HotelBookingSystem.Models;
using HotelBookingSystem.Services.Interfaces;
using System.Net;
using System.Net.Mail;
using Microsoft.Extensions.Configuration;

namespace HotelBookingSystem.Services.Implementations
{
    public class EmailService : IEmailService
    {
        private readonly IConfiguration _configuration;
        private readonly ILogger<EmailService> _logger;

        public EmailService(IConfiguration configuration, ILogger<EmailService> logger)
        {
            _configuration = configuration;
            _logger = logger;
        }

        public async Task SendBookingConfirmationToCustomerAsync(Booking booking)
        {
            try
            {
                string subject = $"X√°c nh·∫≠n ƒë·∫∑t ph√≤ng #{booking.Id} - {booking.Room.Name}";
                string body = GenerateCustomerConfirmationEmail(booking);

                await SendEmailAsync(booking.User.Email ?? "", subject, body);
                _logger.LogInformation($"Booking confirmation email sent to customer: {booking.User.Email}");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, $"Failed to send booking confirmation email to customer: {booking.User.Email}");
                throw;
            }
        }

        public async Task SendBookingNotificationToHotelAsync(Booking booking)
        {
            try
            {
                string hotelEmail = _configuration["HotelSettings:Email"] ?? "hotel@example.com";
                string subject = $"ƒê·∫∑t ph√≤ng m·ªõi #{booking.Id} - {booking.Room.Name}";
                string body = GenerateHotelNotificationEmail(booking);

                await SendEmailAsync(hotelEmail, subject, body);
                _logger.LogInformation($"Booking notification email sent to hotel: {hotelEmail}");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, $"Failed to send booking notification email to hotel");
                throw;
            }
        }

        public async Task SendEmailAsync(string to, string subject, string body, bool isHtml = true)
        {
            try
            {
                var smtpSettings = _configuration.GetSection("SmtpSettings");

                using var client = new SmtpClient(smtpSettings["Host"] ?? "localhost", int.Parse(smtpSettings["Port"] ?? "587"));
                client.EnableSsl = bool.Parse(smtpSettings["EnableSsl"] ?? "true");
                client.Credentials = new NetworkCredential(
                    smtpSettings["Username"] ?? "",
                    smtpSettings["Password"] ?? ""
                );

                var mailMessage = new MailMessage
                {
                    From = new MailAddress(smtpSettings["FromEmail"] ?? "noreply@hotel.com", smtpSettings["FromName"] ?? "Hotel Booking System"),
                    Subject = subject,
                    Body = body,
                    IsBodyHtml = isHtml
                };

                mailMessage.To.Add(to);

                await client.SendMailAsync(mailMessage);
                _logger.LogInformation($"Email sent successfully to: {to}");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, $"Failed to send email to: {to}");
                throw;
            }
        }

        private string GenerateCustomerConfirmationEmail(Booking booking)
        {
            var hotelSettings = _configuration.GetSection("HotelSettings");
            string hotelEmail = hotelSettings["Email"] ?? "contact@hotel.com";
            string hotelPhone = hotelSettings["Phone"] ?? "(84) 123-456-789";
            string hotelAddress = hotelSettings["Address"] ?? "123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM";

            return $@"
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset='utf-8'>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                        .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
                        .header {{ background-color: #007bff; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; background-color: #f9f9f9; }}
                        .booking-details {{ background-color: white; padding: 15px; margin: 15px 0; border-left: 4px solid #007bff; }}
                        .detail-row {{ display: flex; justify-content: space-between; margin: 10px 0; }}
                        .label {{ font-weight: bold; }}
                        .footer {{ background-color: #333; color: white; padding: 15px; text-align: center; }}
                    </style>
                </head>
                <body>
                    <div class='container'>
                        <div class='header'>
                            <h1>üè® X√°c nh·∫≠n ƒë·∫∑t ph√≤ng th√†nh c√¥ng!</h1>
                        </div>
                        
                        <div class='content'>
                            <h2>Xin ch√†o {booking.User.FullName},</h2>
                            <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t ph√≤ng t·∫°i kh√°ch s·∫°n c·ªßa ch√∫ng t√¥i. ƒê·∫∑t ph√≤ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n th√†nh c√¥ng!</p>
                            
                            <div class='booking-details'>
                                <h3>üìã Th√¥ng tin ƒë·∫∑t ph√≤ng</h3>
                                <div class='detail-row'>
                                    <span class='label'>M√£ ƒë·∫∑t ph√≤ng:</span>
                                    <span>#{booking.Id}</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>T√™n ph√≤ng:</span>
                                    <span>{booking.Room.Name}</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>Lo·∫°i ph√≤ng:</span>
                                    <span>{booking.Room.RoomType}</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>Ng√†y nh·∫≠n ph√≤ng:</span>
                                    <span>{booking.CheckIn:dd/MM/yyyy}</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>Ng√†y tr·∫£ ph√≤ng:</span>
                                    <span>{booking.CheckOut:dd/MM/yyyy}</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>S·ªë kh√°ch:</span>
                                    <span>{booking.Guests} ng∆∞·ªùi</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>T·ªïng ti·ªÅn:</span>
                                    <span style='color: #007bff; font-weight: bold;'>{booking.TotalPrice:N0} VNƒê</span>
                                </div>
                            </div>
                            
                            <div class='booking-details'>
                                <h3>üí≥ Th√¥ng tin thanh to√°n</h3>
                                <p><strong>Ph∆∞∆°ng th·ª©c:</strong> Thanh to√°n t·∫°i kh√°ch s·∫°n b·∫±ng ti·ªÅn m·∫∑t</p>
                                <p><strong>Tr·∫°ng th√°i:</strong> Ch·ªù thanh to√°n khi nh·∫≠n ph√≤ng</p>
                                <p style='color: #28a745;'><strong>‚úÖ Mi·ªÖn ph√≠ ƒë·∫∑t ph√≤ng - Kh√¥ng thu ph√≠ tr∆∞·ªõc!</strong></p>
                            </div>
                            
                            <div class='booking-details'>
                                <h3>üìû Th√¥ng tin li√™n h·ªá</h3>
                                <p><strong>Hotline:</strong> {hotelPhone}</p>
                                <p><strong>Email:</strong> {hotelEmail}</p>
                                <p><strong>ƒê·ªãa ch·ªâ:</strong> {hotelAddress}</p>
                            </div>
                            
                            <div style='background-color: #fff3cd; padding: 15px; border-left: 4px solid #ffc107; margin: 15px 0;'>
                                <h4>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</h4>
                                <ul>
                                    <li>C√≥ th·ªÉ h·ªßy mi·ªÖn ph√≠ tr∆∞·ªõc 6 gi·ªù so v·ªõi gi·ªù nh·∫≠n ph√≤ng</li>
                                    <li>Vui l√≤ng mang theo gi·∫•y t·ªù t√πy th√¢n khi nh·∫≠n ph√≤ng</li>
                                    <li>Thanh to√°n b·∫±ng ti·ªÅn m·∫∑t t·∫°i qu·∫ßy l·ªÖ t√¢n</li>
                                    <li>Gi·ªù nh·∫≠n ph√≤ng: 14:00 | Gi·ªù tr·∫£ ph√≤ng: 12:00</li>
                                </ul>
                            </div>
                        </div>
                        
                        <div class='footer'>
                            <p>C·∫£m ∆°n b·∫°n ƒë√£ ch·ªçn kh√°ch s·∫°n c·ªßa ch√∫ng t√¥i!</p>
                            <p>Ch√∫c b·∫°n c√≥ m·ªôt k·ª≥ ngh·ªâ tuy·ªát v·ªùi! üåü</p>
                        </div>
                    </div>
                </body>
                </html>";
        }

        private string GenerateHotelNotificationEmail(Booking booking)
        {
            return $@"
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset='utf-8'>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                        .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
                        .header {{ background-color: #28a745; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; background-color: #f9f9f9; }}
                        .booking-details {{ background-color: white; padding: 15px; margin: 15px 0; border-left: 4px solid #28a745; }}
                        .detail-row {{ display: flex; justify-content: space-between; margin: 10px 0; }}
                        .label {{ font-weight: bold; }}
                        .urgent {{ background-color: #dc3545; color: white; padding: 10px; text-align: center; margin: 15px 0; }}
                    </style>
                </head>
                <body>
                    <div class='container'>
                        <div class='header'>
                            <h1>üè® ƒê·∫∑t ph√≤ng m·ªõi!</h1>
                        </div>
                        
                        <div class='urgent'>
                            <strong>üîî TH√îNG B√ÅO M·ªöI: C√≥ kh√°ch ƒë·∫∑t ph√≤ng!</strong>
                        </div>
                        
                        <div class='content'>
                            <h2>ƒê·∫∑t ph√≤ng m·ªõi #{booking.Id}</h2>
                            <p>C√≥ m·ªôt ƒë·∫∑t ph√≤ng m·ªõi v·ª´a ƒë∆∞·ª£c t·∫°o tr√™n h·ªá th·ªëng. Vui l√≤ng ki·ªÉm tra v√† chu·∫©n b·ªã ph√≤ng.</p>
                            
                            <div class='booking-details'>
                                <h3>üìã Th√¥ng tin ƒë·∫∑t ph√≤ng</h3>
                                <div class='detail-row'>
                                    <span class='label'>M√£ ƒë·∫∑t ph√≤ng:</span>
                                    <span>#{booking.Id}</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>Ng√†y ƒë·∫∑t:</span>
                                    <span>{booking.CreatedDate:dd/MM/yyyy HH:mm}</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>T√™n ph√≤ng:</span>
                                    <span>{booking.Room.Name}</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>Lo·∫°i ph√≤ng:</span>
                                    <span>{booking.Room.RoomType}</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>Ng√†y nh·∫≠n ph√≤ng:</span>
                                    <span>{booking.CheckIn:dd/MM/yyyy}</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>Ng√†y tr·∫£ ph√≤ng:</span>
                                    <span>{booking.CheckOut:dd/MM/yyyy}</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>S·ªë kh√°ch:</span>
                                    <span>{booking.Guests} ng∆∞·ªùi</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>T·ªïng ti·ªÅn:</span>
                                    <span style='color: #28a745; font-weight: bold;'>{booking.TotalPrice:N0} VNƒê</span>
                                </div>
                            </div>
                            
                            <div class='booking-details'>
                                <h3>üë§ Th√¥ng tin kh√°ch h√†ng</h3>
                                <div class='detail-row'>
                                    <span class='label'>H·ªç t√™n:</span>
                                    <span>{booking.User.FullName}</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>Email:</span>
                                    <span>{booking.User.Email}</span>
                                </div>
                                <div class='detail-row'>
                                    <span class='label'>S·ªë ƒëi·ªán tho·∫°i:</span>
                                    <span>{booking.User.PhoneNumber}</span>
                                </div>
                            </div>
                            
                            <div class='booking-details'>
                                <h3>üí≥ Th√¥ng tin thanh to√°n</h3>
                                <p><strong>Ph∆∞∆°ng th·ª©c:</strong> Thanh to√°n t·∫°i kh√°ch s·∫°n</p>
                                <p><strong>Tr·∫°ng th√°i:</strong> Ch·ªù thanh to√°n khi nh·∫≠n ph√≤ng</p>
                                <p style='color: #dc3545;'><strong>‚ö†Ô∏è Kh√°ch s·∫Ω thanh to√°n b·∫±ng ti·ªÅn m·∫∑t khi check-in</strong></p>
                            </div>
                            
                            <div style='background-color: #d4edda; padding: 15px; border-left: 4px solid #28a745; margin: 15px 0;'>
                                <h4>‚úÖ C·∫ßn l√†m:</h4>
                                <ul>
                                    <li>Ki·ªÉm tra t√¨nh tr·∫°ng ph√≤ng {booking.Room.Name}</li>
                                    <li>Chu·∫©n b·ªã ph√≤ng cho ng√†y {booking.CheckIn:dd/MM/yyyy}</li>
                                    <li>Li√™n h·ªá kh√°ch h√†ng n·∫øu c·∫ßn thi·∫øt</li>
                                    <li>C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë·∫∑t ph√≤ng trong h·ªá th·ªëng</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </body>
                </html>";
        }

        #region Status Change Email Methods

        public async Task SendBookingStatusChangeToCustomerAsync(Booking booking, string oldStatus, string newStatus)
        {
            try
            {
                string subject = $"Thay ƒë·ªïi tr·∫°ng th√°i ƒë·∫∑t ph√≤ng #{booking.Id}";
                string body = GenerateBookingStatusChangeEmailToCustomer(booking, oldStatus, newStatus);

                await SendEmailAsync(booking.User?.Email ?? "", subject, body);
                _logger.LogInformation($"Booking status change email sent to customer: {booking.User?.Email}");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, $"Failed to send booking status change email to customer: {booking.User?.Email}");
                throw;
            }
        }

        public async Task SendBookingStatusChangeToHotelAsync(Booking booking, string oldStatus, string newStatus)
        {
            try
            {
                var hotelEmail = _configuration["HotelSettings:Email"] ?? "annthe176161@fpt.edu.vn";
                string subject = $"Thay ƒë·ªïi tr·∫°ng th√°i ƒë·∫∑t ph√≤ng #{booking.Id}";
                string body = GenerateBookingStatusChangeEmailToHotel(booking, oldStatus, newStatus);

                await SendEmailAsync(hotelEmail, subject, body);
                _logger.LogInformation($"Booking status change email sent to hotel: {hotelEmail}");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, $"Failed to send booking status change email to hotel");
                throw;
            }
        }

        public async Task SendPaymentStatusChangeToCustomerAsync(Booking booking, string oldPaymentStatus, string newPaymentStatus)
        {
            try
            {
                string subject = $"Thay ƒë·ªïi tr·∫°ng th√°i thanh to√°n - ƒê·∫∑t ph√≤ng #{booking.Id}";
                string body = GeneratePaymentStatusChangeEmailToCustomer(booking, oldPaymentStatus, newPaymentStatus);

                await SendEmailAsync(booking.User?.Email ?? "", subject, body);
                _logger.LogInformation($"Payment status change email sent to customer: {booking.User?.Email}");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, $"Failed to send payment status change email to customer: {booking.User?.Email}");
                throw;
            }
        }

        public async Task SendPaymentStatusChangeToHotelAsync(Booking booking, string oldPaymentStatus, string newPaymentStatus)
        {
            try
            {
                var hotelEmail = _configuration["HotelSettings:Email"] ?? "annthe176161@fpt.edu.vn";
                string subject = $"Thay ƒë·ªïi tr·∫°ng th√°i thanh to√°n - ƒê·∫∑t ph√≤ng #{booking.Id}";
                string body = GeneratePaymentStatusChangeEmailToHotel(booking, oldPaymentStatus, newPaymentStatus);

                await SendEmailAsync(hotelEmail, subject, body);
                _logger.LogInformation($"Payment status change email sent to hotel: {hotelEmail}");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, $"Failed to send payment status change email to hotel");
                throw;
            }
        }

        public async Task SendBookingCancellationToCustomerAsync(Booking booking, string reason)
        {
            try
            {
                string subject = $"H·ªßy ƒë·∫∑t ph√≤ng #{booking.Id}";
                string body = GenerateBookingCancellationEmailToCustomer(booking, reason);

                await SendEmailAsync(booking.User?.Email ?? "", subject, body);
                _logger.LogInformation($"Booking cancellation email sent to customer: {booking.User?.Email}");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, $"Failed to send booking cancellation email to customer: {booking.User?.Email}");
                throw;
            }
        }

        public async Task SendBookingCancellationToHotelAsync(Booking booking, string reason)
        {
            try
            {
                var hotelEmail = _configuration["HotelSettings:Email"] ?? "annthe176161@fpt.edu.vn";
                string subject = $"H·ªßy ƒë·∫∑t ph√≤ng #{booking.Id}";
                string body = GenerateBookingCancellationEmailToHotel(booking, reason);

                await SendEmailAsync(hotelEmail, subject, body);
                _logger.LogInformation($"Booking cancellation email sent to hotel: {hotelEmail}");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, $"Failed to send booking cancellation email to hotel");
                throw;
            }
        }

        public async Task SendCheckInReminderToCustomerAsync(Booking booking)
        {
            try
            {
                string subject = $"Nh·∫Øc nh·ªü check-in - ƒê·∫∑t ph√≤ng #{booking.Id}";
                string body = GenerateCheckInReminderEmail(booking);

                await SendEmailAsync(booking.User?.Email ?? "", subject, body);
                _logger.LogInformation($"Check-in reminder email sent to customer: {booking.User?.Email}");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, $"Failed to send check-in reminder email to customer: {booking.User?.Email}");
                throw;
            }
        }

        public async Task SendPaymentReminderToCustomerAsync(Booking booking)
        {
            try
            {
                string subject = $"Nh·∫Øc nh·ªü thanh to√°n - ƒê·∫∑t ph√≤ng #{booking.Id}";
                string body = GeneratePaymentReminderEmail(booking);

                await SendEmailAsync(booking.User?.Email ?? "", subject, body);
                _logger.LogInformation($"Payment reminder email sent to customer: {booking.User?.Email}");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, $"Failed to send payment reminder email to customer: {booking.User?.Email}");
                throw;
            }
        }

        #endregion

        #region Email Template Generators

        private string GenerateBookingStatusChangeEmailToCustomer(Booking booking, string oldStatus, string newStatus)
        {
            var statusColor = newStatus.ToLower() switch
            {
                "confirmed" or "x√°c nh·∫≠n" => "#28a745",
                "cancelled" or "h·ªßy" => "#dc3545",
                "pending" or "ch·ªù x·ª≠ l√Ω" => "#ffc107",
                "completed" or "ho√†n th√†nh" => "#17a2b8",
                _ => "#6c757d"
            };

            return $@"
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset='utf-8'>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 20px; }}
                        .container {{ max-width: 600px; margin: 0 auto; background: #f9f9f9; border-radius: 10px; overflow: hidden; }}
                        .header {{ background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; }}
                        .content {{ padding: 30px; background: white; }}
                        .status-box {{ background: {statusColor}; color: white; padding: 15px; border-radius: 8px; text-align: center; margin: 20px 0; }}
                        .info-box {{ background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 15px 0; }}
                        .footer {{ background: #343a40; color: white; padding: 20px; text-align: center; }}
                    </style>
                </head>
                <body>
                    <div class='container'>
                        <div class='header'>
                            <h1>üè® C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë·∫∑t ph√≤ng</h1>
                        </div>
                        <div class='content'>
                            <h2>Ch√†o {booking.User?.FullName ?? "Qu√Ω kh√°ch"},</h2>
                            
                            <p>Tr·∫°ng th√°i ƒë·∫∑t ph√≤ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!</p>
                            
                            <div class='status-box'>
                                <h3>Tr·∫°ng th√°i m·ªõi: {newStatus.ToUpper()}</h3>
                                <p>Thay ƒë·ªïi t·ª´: {oldStatus} ‚Üí {newStatus}</p>
                            </div>
                            
                            <div class='info-box'>
                                <h4>üìã Th√¥ng tin ƒë·∫∑t ph√≤ng</h4>
                                <p><strong>M√£ ƒë·∫∑t ph√≤ng:</strong> #{booking.Id}</p>
                                <p><strong>Ph√≤ng:</strong> {booking.Room?.Name ?? "N/A"}</p>
                                <p><strong>Ng√†y nh·∫≠n ph√≤ng:</strong> {booking.CheckIn:dd/MM/yyyy}</p>
                                <p><strong>Ng√†y tr·∫£ ph√≤ng:</strong> {booking.CheckOut:dd/MM/yyyy}</p>
                                <p><strong>T·ªïng ti·ªÅn:</strong> {booking.TotalPrice:C}</p>
                            </div>
                            
                            <p>N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
                        </div>
                        <div class='footer'>
                            <p>üè® Hotel Booking System | Email: annthe176161@fpt.edu.vn</p>
                        </div>
                    </div>
                </body>
                </html>";
        }

        private string GenerateBookingStatusChangeEmailToHotel(Booking booking, string oldStatus, string newStatus)
        {
            return $@"
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset='utf-8'>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                        .container {{ max-width: 600px; margin: 0 auto; background: #fff; border: 1px solid #ddd; }}
                        .header {{ background: #e74c3c; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; }}
                        .status-change {{ background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px; margin: 15px 0; }}
                    </style>
                </head>
                <body>
                    <div class='container'>
                        <div class='header'>
                            <h1>üè® Th√¥ng b√°o thay ƒë·ªïi tr·∫°ng th√°i ƒë·∫∑t ph√≤ng</h1>
                        </div>
                        <div class='content'>
                            <h2>Th√¥ng b√°o h·ªá th·ªëng</h2>
                            
                            <div class='status-change'>
                                <h3>Thay ƒë·ªïi tr·∫°ng th√°i: {oldStatus} ‚Üí {newStatus}</h3>
                            </div>
                            
                            <h4>üìã Chi ti·∫øt ƒë·∫∑t ph√≤ng:</h4>
                            <ul>
                                <li><strong>M√£ ƒë·∫∑t ph√≤ng:</strong> #{booking.Id}</li>
                                <li><strong>Kh√°ch h√†ng:</strong> {booking.User?.FullName ?? "N/A"}</li>
                                <li><strong>Email:</strong> {booking.User?.Email ?? "N/A"}</li>
                                <li><strong>Ph√≤ng:</strong> {booking.Room?.Name ?? "N/A"}</li>
                                <li><strong>Ng√†y nh·∫≠n ph√≤ng:</strong> {booking.CheckIn:dd/MM/yyyy}</li>
                                <li><strong>Ng√†y tr·∫£ ph√≤ng:</strong> {booking.CheckOut:dd/MM/yyyy}</li>
                                <li><strong>T·ªïng ti·ªÅn:</strong> {booking.TotalPrice:C}</li>
                                <li><strong>Ng√†y t·∫°o:</strong> {booking.CreatedDate:dd/MM/yyyy HH:mm}</li>
                            </ul>
                            
                            <p><em>Vui l√≤ng c·∫≠p nh·∫≠t h·ªá th·ªëng v√† th·ª±c hi·ªán c√°c b∆∞·ªõc c·∫ßn thi·∫øt.</em></p>
                        </div>
                    </div>
                </body>
                </html>";
        }

        private string GeneratePaymentStatusChangeEmailToCustomer(Booking booking, string oldPaymentStatus, string newPaymentStatus)
        {
            var statusColor = newPaymentStatus.ToLower() switch
            {
                "paid" or "ƒë√£ thanh to√°n" => "#28a745",
                "pending" or "ch·ªù thanh to√°n" => "#ffc107",
                "failed" or "th·∫•t b·∫°i" => "#dc3545",
                "refunded" or "ƒë√£ ho√†n ti·ªÅn" => "#17a2b8",
                _ => "#6c757d"
            };

            return $@"
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset='utf-8'>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 20px; }}
                        .container {{ max-width: 600px; margin: 0 auto; background: #f9f9f9; border-radius: 10px; overflow: hidden; }}
                        .header {{ background: linear-gradient(135deg, #28a745 0%, #20c997 100%); color: white; padding: 30px; text-align: center; }}
                        .content {{ padding: 30px; background: white; }}
                        .payment-status {{ background: {statusColor}; color: white; padding: 15px; border-radius: 8px; text-align: center; margin: 20px 0; }}
                        .info-box {{ background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 15px 0; }}
                    </style>
                </head>
                <body>
                    <div class='container'>
                        <div class='header'>
                            <h1>üí≥ C·∫≠p nh·∫≠t tr·∫°ng th√°i thanh to√°n</h1>
                        </div>
                        <div class='content'>
                            <h2>Ch√†o {booking.User?.FullName ?? "Qu√Ω kh√°ch"},</h2>
                            
                            <p>Tr·∫°ng th√°i thanh to√°n cho ƒë·∫∑t ph√≤ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!</p>
                            
                            <div class='payment-status'>
                                <h3>Tr·∫°ng th√°i thanh to√°n: {newPaymentStatus.ToUpper()}</h3>
                                <p>Thay ƒë·ªïi t·ª´: {oldPaymentStatus} ‚Üí {newPaymentStatus}</p>
                            </div>
                            
                            <div class='info-box'>
                                <h4>üìã Th√¥ng tin ƒë·∫∑t ph√≤ng</h4>
                                <p><strong>M√£ ƒë·∫∑t ph√≤ng:</strong> #{booking.Id}</p>
                                <p><strong>Ph√≤ng:</strong> {booking.Room?.Name ?? "N/A"}</p>
                                <p><strong>T·ªïng ti·ªÅn:</strong> {booking.TotalPrice:C}</p>
                                <p><strong>Ng√†y nh·∫≠n ph√≤ng:</strong> {booking.CheckIn:dd/MM/yyyy}</p>
                            </div>
                            
                            <p>C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i!</p>
                        </div>
                    </div>
                </body>
                </html>";
        }

        private string GeneratePaymentStatusChangeEmailToHotel(Booking booking, string oldPaymentStatus, string newPaymentStatus)
        {
            return $@"
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset='utf-8'>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                        .container {{ max-width: 600px; margin: 0 auto; background: #fff; border: 1px solid #ddd; }}
                        .header {{ background: #28a745; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; }}
                        .payment-change {{ background: #d1ecf1; border: 1px solid #bee5eb; padding: 15px; border-radius: 5px; margin: 15px 0; }}
                    </style>
                </head>
                <body>
                    <div class='container'>
                        <div class='header'>
                            <h1>üí≥ Th√¥ng b√°o thay ƒë·ªïi tr·∫°ng th√°i thanh to√°n</h1>
                        </div>
                        <div class='content'>
                            <h2>Th√¥ng b√°o h·ªá th·ªëng</h2>
                            
                            <div class='payment-change'>
                                <h3>Thanh to√°n: {oldPaymentStatus} ‚Üí {newPaymentStatus}</h3>
                                <p><strong>S·ªë ti·ªÅn:</strong> {booking.TotalPrice:C}</p>
                            </div>
                            
                            <h4>üìã Chi ti·∫øt ƒë·∫∑t ph√≤ng:</h4>
                            <ul>
                                <li><strong>M√£ ƒë·∫∑t ph√≤ng:</strong> #{booking.Id}</li>
                                <li><strong>Kh√°ch h√†ng:</strong> {booking.User?.FullName ?? "N/A"} ({booking.User?.Email ?? "N/A"})</li>
                                <li><strong>Ph√≤ng:</strong> {booking.Room?.Name ?? "N/A"}</li>
                                <li><strong>T·ªïng ti·ªÅn:</strong> {booking.TotalPrice:C}</li>
                                <li><strong>Th·ªùi gian:</strong> {DateTime.Now:dd/MM/yyyy HH:mm}</li>
                            </ul>
                        </div>
                    </div>
                </body>
                </html>";
        }

        private string GenerateBookingCancellationEmailToCustomer(Booking booking, string reason)
        {
            return $@"
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset='utf-8'>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 20px; }}
                        .container {{ max-width: 600px; margin: 0 auto; background: #f9f9f9; border-radius: 10px; overflow: hidden; }}
                        .header {{ background: linear-gradient(135deg, #dc3545 0%, #c82333 100%); color: white; padding: 30px; text-align: center; }}
                        .content {{ padding: 30px; background: white; }}
                        .cancellation-box {{ background: #f8d7da; border: 1px solid #f5c6cb; padding: 20px; border-radius: 8px; margin: 20px 0; }}
                        .info-box {{ background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 15px 0; }}
                    </style>
                </head>
                <body>
                    <div class='container'>
                        <div class='header'>
                            <h1>‚ùå Th√¥ng b√°o h·ªßy ƒë·∫∑t ph√≤ng</h1>
                        </div>
                        <div class='content'>
                            <h2>Ch√†o {booking.User?.FullName ?? "Qu√Ω kh√°ch"},</h2>
                            
                            <p>Ch√∫ng t√¥i r·∫•t ti·∫øc ph·∫£i th√¥ng b√°o r·∫±ng ƒë·∫∑t ph√≤ng c·ªßa b·∫°n ƒë√£ b·ªã h·ªßy.</p>
                            
                            <div class='cancellation-box'>
                                <h3>üö´ ƒê·∫∑t ph√≤ng #{booking.Id} ƒë√£ b·ªã h·ªßy</h3>
                                <p><strong>L√Ω do h·ªßy:</strong> {reason}</p>
                            </div>
                            
                            <div class='info-box'>
                                <h4>üìã Th√¥ng tin ƒë·∫∑t ph√≤ng ƒë√£ h·ªßy</h4>
                                <p><strong>M√£ ƒë·∫∑t ph√≤ng:</strong> #{booking.Id}</p>
                                <p><strong>Ph√≤ng:</strong> {booking.Room?.Name ?? "N/A"}</p>
                                <p><strong>Ng√†y nh·∫≠n ph√≤ng:</strong> {booking.CheckIn:dd/MM/yyyy}</p>
                                <p><strong>Ng√†y tr·∫£ ph√≤ng:</strong> {booking.CheckOut:dd/MM/yyyy}</p>
                                <p><strong>T·ªïng ti·ªÅn:</strong> {booking.TotalPrice:C}</p>
                            </div>
                            
                            <p>N·∫øu b·∫°n ƒë√£ thanh to√°n, ch√∫ng t√¥i s·∫Ω ho√†n ti·ªÅn trong v√≤ng 3-5 ng√†y l√†m vi·ªác.</p>
                            <p>Xin l·ªói v√¨ s·ª± b·∫•t ti·ªán n√†y. Vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i n·∫øu c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o.</p>
                        </div>
                    </div>
                </body>
                </html>";
        }

        private string GenerateBookingCancellationEmailToHotel(Booking booking, string reason)
        {
            return $@"
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset='utf-8'>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                        .container {{ max-width: 600px; margin: 0 auto; background: #fff; border: 1px solid #ddd; }}
                        .header {{ background: #dc3545; color: white; padding: 20px; text-align: center; }}
                        .content {{ padding: 20px; }}
                        .cancellation {{ background: #f8d7da; border: 1px solid #f5c6cb; padding: 15px; border-radius: 5px; margin: 15px 0; }}
                    </style>
                </head>
                <body>
                    <div class='container'>
                        <div class='header'>
                            <h1>‚ùå Th√¥ng b√°o h·ªßy ƒë·∫∑t ph√≤ng</h1>
                        </div>
                        <div class='content'>
                            <h2>Th√¥ng b√°o h·ªá th·ªëng</h2>
                            
                            <div class='cancellation'>
                                <h3>üö´ ƒê·∫∑t ph√≤ng #{booking.Id} ƒë√£ b·ªã h·ªßy</h3>
                                <p><strong>L√Ω do:</strong> {reason}</p>
                            </div>
                            
                            <h4>üìã Chi ti·∫øt ƒë·∫∑t ph√≤ng ƒë√£ h·ªßy:</h4>
                            <ul>
                                <li><strong>M√£ ƒë·∫∑t ph√≤ng:</strong> #{booking.Id}</li>
                                <li><strong>Kh√°ch h√†ng:</strong> {booking.User?.FullName ?? "N/A"} ({booking.User?.Email ?? "N/A"})</li>
                                <li><strong>Ph√≤ng:</strong> {booking.Room?.Name ?? "N/A"}</li>
                                <li><strong>Ng√†y nh·∫≠n ph√≤ng:</strong> {booking.CheckIn:dd/MM/yyyy}</li>
                                <li><strong>Ng√†y tr·∫£ ph√≤ng:</strong> {booking.CheckOut:dd/MM/yyyy}</li>
                                <li><strong>T·ªïng ti·ªÅn:</strong> {booking.TotalPrice:C}</li>
                                <li><strong>Th·ªùi gian h·ªßy:</strong> {DateTime.Now:dd/MM/yyyy HH:mm}</li>
                            </ul>
                            
                            <p><strong>L∆∞u √Ω:</strong> Vui l√≤ng c·∫≠p nh·∫≠t t√¨nh tr·∫°ng ph√≤ng v√† x·ª≠ l√Ω ho√†n ti·ªÅn (n·∫øu c√≥).</p>
                        </div>
                    </div>
                </body>
                </html>";
        }

        private string GenerateCheckInReminderEmail(Booking booking)
        {
            return $@"
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset='utf-8'>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 20px; }}
                        .container {{ max-width: 600px; margin: 0 auto; background: #f9f9f9; border-radius: 10px; overflow: hidden; }}
                        .header {{ background: linear-gradient(135deg, #17a2b8 0%, #138496 100%); color: white; padding: 30px; text-align: center; }}
                        .content {{ padding: 30px; background: white; }}
                        .reminder-box {{ background: #d1ecf1; border: 1px solid #bee5eb; padding: 20px; border-radius: 8px; margin: 20px 0; }}
                        .info-box {{ background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 15px 0; }}
                    </style>
                </head>
                <body>
                    <div class='container'>
                        <div class='header'>
                            <h1>üè® Nh·∫Øc nh·ªü check-in</h1>
                        </div>
                        <div class='content'>
                            <h2>Ch√†o {booking.User?.FullName ?? "Qu√Ω kh√°ch"},</h2>
                            
                            <div class='reminder-box'>
                                <h3>üìÖ Nh·∫Øc nh·ªü check-in</h3>
                                <p>B·∫°n c√≥ l·ªãch check-in v√†o ng√†y <strong>{booking.CheckIn:dd/MM/yyyy}</strong></p>
                            </div>
                            
                            <div class='info-box'>
                                <h4>üìã Th√¥ng tin ƒë·∫∑t ph√≤ng</h4>
                                <p><strong>M√£ ƒë·∫∑t ph√≤ng:</strong> #{booking.Id}</p>
                                <p><strong>Ph√≤ng:</strong> {booking.Room?.Name ?? "N/A"}</p>
                                <p><strong>Ng√†y nh·∫≠n ph√≤ng:</strong> {booking.CheckIn:dd/MM/yyyy}</p>
                                <p><strong>Ng√†y tr·∫£ ph√≤ng:</strong> {booking.CheckOut:dd/MM/yyyy}</p>
                            </div>
                            
                            <p>Vui l√≤ng chu·∫©n b·ªã ƒë·∫ßy ƒë·ªß gi·∫•y t·ªù t√πy th√¢n ƒë·ªÉ l√†m th·ªß t·ª•c check-in thu·∫≠n l·ª£i.</p>
                            <p>Ch√∫ng t√¥i r·∫•t mong ƒë∆∞·ª£c ph·ª•c v·ª• b·∫°n!</p>
                        </div>
                    </div>
                </body>
                </html>";
        }

        private string GeneratePaymentReminderEmail(Booking booking)
        {
            return $@"
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset='utf-8'>
                    <style>
                        body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 20px; }}
                        .container {{ max-width: 600px; margin: 0 auto; background: #f9f9f9; border-radius: 10px; overflow: hidden; }}
                        .header {{ background: linear-gradient(135deg, #ffc107 0%, #e0a800 100%); color: #333; padding: 30px; text-align: center; }}
                        .content {{ padding: 30px; background: white; }}
                        .payment-reminder {{ background: #fff3cd; border: 1px solid #ffeaa7; padding: 20px; border-radius: 8px; margin: 20px 0; }}
                        .info-box {{ background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 15px 0; }}
                    </style>
                </head>
                <body>
                    <div class='container'>
                        <div class='header'>
                            <h1>üí≥ Nh·∫Øc nh·ªü thanh to√°n</h1>
                        </div>
                        <div class='content'>
                            <h2>Ch√†o {booking.User?.FullName ?? "Qu√Ω kh√°ch"},</h2>
                            
                            <div class='payment-reminder'>
                                <h3>‚ö†Ô∏è Nh·∫Øc nh·ªü thanh to√°n</h3>
                                <p>B·∫°n c√≥ kho·∫£n thanh to√°n ch∆∞a ho√†n th√†nh cho ƒë·∫∑t ph√≤ng #{booking.Id}</p>
                                <p><strong>S·ªë ti·ªÅn:</strong> {booking.TotalPrice:C}</p>
                            </div>
                            
                            <div class='info-box'>
                                <h4>üìã Th√¥ng tin ƒë·∫∑t ph√≤ng</h4>
                                <p><strong>M√£ ƒë·∫∑t ph√≤ng:</strong> #{booking.Id}</p>
                                <p><strong>Ph√≤ng:</strong> {booking.Room?.Name ?? "N/A"}</p>
                                <p><strong>Ng√†y nh·∫≠n ph√≤ng:</strong> {booking.CheckIn:dd/MM/yyyy}</p>
                                <p><strong>T·ªïng ti·ªÅn:</strong> {booking.TotalPrice:C}</p>
                            </div>
                            
                            <p>Vui l√≤ng ho√†n t·∫•t thanh to√°n ƒë·ªÉ ƒë·∫£m b·∫£o ƒë·∫∑t ph√≤ng c·ªßa b·∫°n.</p>
                            <p>C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i!</p>
                        </div>
                    </div>
                </body>
                </html>";
        }

        #endregion
    }
}
